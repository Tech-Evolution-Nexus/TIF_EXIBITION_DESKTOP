/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import View.PengeluaranView;
import View.StokOpnameView;
import View.Auth.SaldoKasAwal;
import View.Auth.login;
import Config.DB;
import Controllers.ObatController;
import Controllers.SatuanController;
import Helper.Auth;
import Helper.FormatTanggal;
import Laporan.LaporanMain;
import Laporan.LPembelianView;
import View.ObatView;
import View.PembelianView;
import View.SatuanView;
import View.PengeluaranView;
import View.SuplierView;
import View.PenjualanView;
import View.ReturPembelianView;
import View.ReturPenjualanView;
import View.StokOpnameView;
import View.UserView;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import org.json.JSONArray;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.json.JSONException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Muhammad Nor Kholit
 */
public class Main extends javax.swing.JFrame {

    private CardLayout cardLayout;
    private String role = "";

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Hitung ukuran JFrame
        int width = (int) (screenSize.width * 0.9);
        int height = (int) (screenSize.height * 0.9);
        setSize(width, height);
        main.setOpaque(true);
        cardLayout = new CardLayout();
        main.setLayout(cardLayout);

        main.add(new Controllers.ObatController().getView(), "obat");

        main.add(new SatuanController().getView(), "satuan");
        main.add(new Controllers.KategoriController().getView(), "Category");
        main.add(new Controllers.UserController().getView(), "User");
        main.add(new Controllers.SupplierController().getView(), "Supplier");
        main.add(new LaporanMain(), "Report");
        main.add(new Controllers.TransaksiPenjualanController().getView(), "Penjualan");
//        main.add(new View.PembelianView(), "pembelian");
        main.add(new PengeluaranView(), "Pengeluaran");
        main.add(new Controllers.TransaksiPembelianController().getView(), "Pembelian");
        main.add(new ReturPembelianView(), "Retur Pembelian");
        main.add(new Controllers.ReturnPenjualanController().getView(), "Retur Penjualan");
        main.add(new StokOpnameView(), "Stok Opname");
        main.add(new DashboardView(), "Home");
        pageName.setText("Dashboard");
        cardLayout.show(main, "Home");
        setExtendedState((Main.MAXIMIZED_BOTH));
        setLocationRelativeTo(null);
        tanggal.setText(FormatTanggal.formatDate(java.sql.Date.valueOf(LocalDate.now())));


        Auth auth = new Auth();
         try {
             if (auth.check()) {
                 role =auth.getRole();
                 username.setText("<html><div style='text-align: right;'>" + auth.getNama() + "<br><small style='font-size:10px'>" + auth.getRole() + "</small></div></html>");

<<<<<<< HEAD
             } else {
                 new login().setVisible(true);
             }
         } catch (Exception e) {
         }
=======
            } else {
               
                new login().setVisible(true);
            }
        } catch (Exception e) {
        }
>>>>>>> 95a8e7cf5e8532e9f79eab74ba6e85880735eeb7

        sidebar();

//        role.setText("sda");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog = new javax.swing.JDialog();
        dialog2 = new javax.swing.JPopupMenu();
        jPanel4 = new javax.swing.JPanel();
        main = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        menu_bar = new javax.swing.JPanel();
        username = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pageName = new javax.swing.JLabel();
        tanggal = new javax.swing.JLabel();

        dialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialog.setBackground(new java.awt.Color(58, 98, 215));
        dialog.setBounds(new java.awt.Rectangle(100, 82, 300, 300));
        dialog.setUndecorated(true);
        dialog.setType(java.awt.Window.Type.POPUP);
        dialog.getContentPane().setLayout(new java.awt.BorderLayout());

        dialog2.setBackground(new java.awt.Color(58, 98, 215));
        dialog2.setBorder(null);
        dialog2.setBorderPainted(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setForeground(new java.awt.Color(245, 246, 250));

        main.setLayout(new javax.swing.BoxLayout(main, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBackground(new java.awt.Color(58, 98, 215));

        menu_bar.setBackground(new java.awt.Color(58, 98, 215));

        javax.swing.GroupLayout menu_barLayout = new javax.swing.GroupLayout(menu_bar);
        menu_bar.setLayout(menu_barLayout);
        menu_barLayout.setHorizontalGroup(
            menu_barLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
        menu_barLayout.setVerticalGroup(
            menu_barLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 51, Short.MAX_VALUE)
        );

        username.setIcon(new FlatSVGIcon("Assets/svg/personIcon.svg"));
        username.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        username.setText("Username");
        username.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(menu_bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(10, Short.MAX_VALUE)
                        .addComponent(menu_bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pageName.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        pageName.setForeground(new java.awt.Color(58, 98, 215));
        pageName.setText("Dashboard");

        tanggal.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        tanggal.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(pageName, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addGap(268, 268, 268)
                .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pageName)
                    .addComponent(tanggal))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseEntered
        showLogout();
    }//GEN-LAST:event_usernameMouseEntered

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        showLogout();
    }//GEN-LAST:event_usernameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            // UIManager.put("Table.selectionBackground", new Color(55, 98, 216));
           UIManager.put("TableHeader.height", 40);
            UIManager.put("TableHeader.hoverForeground", Color.white);
            UIManager.put("TableHeader.hoverBackground", new Color(58,98,215));
            UIManager.put("TableHeader.background", new Color(58,98,215));
            UIManager.put("TableHeader.foreground", new Color(255,255,255));
            UIManager.put("Table.setSelectionForeground", new Color(255, 255, 255));
            UIManager.put("Table.rowHeight", 30); // Adjust the value to your desired height
            UIManager.put("Table.font", new Font("Poppins", Font.PLAIN, 16)); // Adjust the value to your desired height
            UIManager.put("Label.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("TextField.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("Button.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("TextArea.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("LookAndFeel.defaultFontName", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("Label.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("ComboBox.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.put("PopupMenu.font", new Font("Poppins", Font.PLAIN, 16));
            UIManager.getDefaults().put("ScrollPane.border", BorderFactory.createEmptyBorder());
            UIManager.getDefaults().put("Table.border", BorderFactory.createEmptyBorder());
            UIManager.put("TabbedPane.selectedBackground", Color.white);
            UIManager.put("Button.arc", 15);
            UIManager.put("Component.arc", 15);
            UIManager.put("TextComponent.arc", 15);
            UIManager.put("Component.arrowType", "triangle");

        } catch (Exception e) {
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                System.setProperty("sun.java2d.uiScale", "1");
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dialog;
    private javax.swing.JPopupMenu dialog2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel main;
    private javax.swing.JPanel menu_bar;
    private javax.swing.JLabel pageName;
    private javax.swing.JLabel tanggal;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables

    private Object[][] childObat = {{"obat", "Data Obat"}, {"satuan", "Data Satuan Obat"}};
    private Object[][] childTransaksi = {{"Pembelian", "Transaksi Pembelian"}, {"Retur Pembelian","Retur Pembelian"},{"Penjualan", "Transaksi Penjualan"},{"Retur Penjualan","Retur Penjualan"}};
    private Object[][] childTransaksi2 = {{"Penjualan", "Transaksi Penjualan"}};
    private Object[][] kosong = {};
//    private 
    private Object[][] menu_list_data_owner = {
        {"icf_home.svg", "icn_home.svg", "Home", "Dashboard", kosong},
        {"icf_obat.svg", "icn_obat.svg", "<html> Medicine <b>&#8595;</b> </html>", "Data Obat", childObat},
        {"icf_supplier.svg", "icn_supplier.svg", "Supplier", "Data Suplier", kosong},
        {"icf_kategori.svg", "icn_kategori.svg", "Category", "Data Categori", kosong},
        {"icf_trx.svg", "icn_trx.svg", "<html>Transaction <b>&#8595;</b></html>", "Transaksi", childTransaksi},
        {"icf_report.svg", "icn_report.svg", "Report", "Laporan", kosong},
        {"icf_user.svg", "icn_user.svg", "User", "Data User", kosong},
        {"icf_pengeluaran.svg", "icn_pengeluaran.svg", "Pengeluaran", "Data Pengeluaran", kosong},
        {"icf_user.svg", "icn_user.svg", "Stok Opname", "Stok Opname", kosong},};

    private Object[][] menu_list_data_kasir = {
        {"icf_home.svg", "icn_home.svg", "Home", "Dashboard", kosong},
        {"icf_obat.svg", "icn_obat.svg", "Medicine", "Data Obat", childObat},
        {"icf_trx.svg", "icn_trx.svg", "Transaction", "Transaksi", childTransaksi2},};
    private ArrayList<JPanel> addedLabels = new ArrayList<>();

    public void sidebar() {
        menu_bar.setLayout(new GridBagLayout());
        Object[][] menu = role.equalsIgnoreCase("owner") ? menu_list_data_owner : menu_list_data_kasir;
        for (Object[] objects : menu) {
//            javax.swing.JPanel panelChild = new javax.swing.JPanel();
            javax.swing.JPanel panel = new javax.swing.JPanel();
            javax.swing.JLabel label = new javax.swing.JLabel(objects[2].toString());
            panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
            label.setForeground(Color.WHITE);
            panel.setOpaque(false);
            panel.setBackground(Color.LIGHT_GRAY);
            panel.setLayout(new GridBagLayout());
            label.setIcon(new FlatSVGIcon("Assets/ic_header/" + objects[0].toString()));
            label.setVerticalTextPosition(JLabel.BOTTOM);
            label.setHorizontalTextPosition(JLabel.CENTER);

            panel.addMouseListener(new java.awt.event.MouseAdapter() {
                // Store the previously added labels for removal

                @Override
                public void mouseClicked(MouseEvent evt) {
                    showPopUp(objects, panel, label);
                    Object[] childRows = (Object[]) objects[4];
                    if (childRows.length > 0) {
                        return;
                    }

                    resetStyle();
                    setBoldFont(label);
                    setBottomBorder(panel);
                    cardLayout.show(main, objects[2].toString());
                    pageName.setText(objects[3].toString());
                }

//                @Override
//                public void mouseEntered(MouseEvent e) {
//                    super.mouseEntered(e);
//                    Point position = panel.getLocationOnScreen();
//                    dialog.setVisible(false);
//                    for (JPanel panel : addedLabels) {
//                        dialog.remove(panel);
//                    }
//                    addedLabels.clear();
//                    dialog.setVisible(false);
//                    addedLabels.clear();
//
//                    Object[] childRows = (Object[]) objects[4];
//                    javax.swing.JPanel panel2 = new javax.swing.JPanel();
//                    panel2.setBackground(new Color(51, 85, 188));
//                    panel2.setLayout(new BoxLayout(panel2, BoxLayout.Y_AXIS));
////                    panel2.setSize(200, 100);
//                    panel2.setBorder(new EmptyBorder(5, 0, 0, 0));
//                    for (Object object : childRows) {
//                        Object[] innerRow = (Object[]) object;
//                        javax.swing.JLabel label2 = new javax.swing.JLabel(innerRow[0].toString());
//                        javax.swing.JPanel panel3 = new javax.swing.JPanel(new FlowLayout(FlowLayout.LEFT));
//                        label2.setHorizontalAlignment(SwingConstants.LEFT);
//                        label2.setForeground(Color.white);
//                        label2.setFont(new Font("Poppins", Font.PLAIN, 13));
//                        panel3.setBorder(new EmptyBorder(0, 10, 5, 10));
//                        panel3.setBackground(new Color(51, 85, 188));
//                        panel3.add(label2);
//                        panel2.add(panel3);
//
//                        dialog.add(panel2);
//                        addedLabels.add(panel2);
//                        panel3.addMouseListener(new java.awt.event.MouseAdapter() {
//                            @Override
//                            public void mouseClicked(MouseEvent e) {
//                                resetStyle();
//                                setBoldFont(label);
//                                setBottomBorder(panel);
//                                cardLayout.show(main, innerRow[0].toString());
//                                pageName.setText(innerRow[1].toString());
//                            }
//                        });
//
//                    }
//                    if (childRows.length > 0) {
//                        dialog.setBounds(position.x, position.y + 73, 200, childRows.length * 43);
//                        dialog.setVisible(true);
//                    }
//
//                }
//
//                @Override
//                public void mouseExited(MouseEvent e) {
//                    super.mouseExited(e);
//
//                    dialog.addMouseMotionListener(new java.awt.event.MouseAdapter() {
//                        @Override
//                        public void mouseMoved(MouseEvent e) {
////                            // Check if the cursor is over the text area
//                            Point point = e.getPoint();
//                            if (panel.getBounds().contains(point) || dialog.getBounds().contains(point) || jPanel2.getBounds().contains(point)) {
//                                System.out.println("Cursor over the text area");
//                            } else {
//                                System.out.println("Cursor outside the text area");
//                                // Close the dialog when the cursor is outside the text area or the dialog
//                                dialog.dispose();
//                            }
//                        }
//                    });
////               
//
//                }
                @Override
                public void mouseEntered(MouseEvent e) {
                    showPopUp(objects, panel, label);
                }

            });
            panel.add(label);

            menu_bar.add(panel);

        }
    }

    public void showPopUp(Object[] objects, JPanel panel, JLabel label) {
        for (JPanel panel2 : addedLabels) {
            dialog2.remove(panel2);
        }
        addedLabels.clear();
        Object[] childRows = (Object[]) objects[4];
        javax.swing.JPanel panel2 = new javax.swing.JPanel();
        panel2.setBackground(new Color(51, 85, 188));
        panel2.setLayout(new BoxLayout(panel2, BoxLayout.Y_AXIS));
        panel2.setPreferredSize(new Dimension(200, 43 * childRows.length));
//                    panel2.setSize(200, 100);
        panel2.setBorder(new EmptyBorder(5, 0, 0, 0));
        for (Object object : childRows) {
            Object[] innerRow = (Object[]) object;
            javax.swing.JLabel label2 = new javax.swing.JLabel(innerRow[0].toString());
            javax.swing.JPanel panel3 = new javax.swing.JPanel(new FlowLayout(FlowLayout.LEFT));
            label2.setHorizontalAlignment(SwingConstants.LEFT);
            label2.setForeground(Color.white);
            label2.setFont(new Font("Poppins", Font.PLAIN, 16));
            panel3.setBorder(new EmptyBorder(0, 10, 5, 10));
            panel3.setBackground(new Color(51, 85, 188));
            panel3.add(label2);
            panel2.add(panel3);

            dialog2.add(panel2);
            addedLabels.add(panel2);
            panel3.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    resetStyle();
                    setBoldFont(label);
                    setBottomBorder(panel);
                    cardLayout.show(main, innerRow[0].toString());
                    pageName.setText(innerRow[1].toString());
                    dialog2.setVisible(false);
                }
            });

        }
        dialog2.show(panel, 0, panel.getHeight() + 5);
    }

    public void showLogout() {
        for (JPanel panel : addedLabels) {
            dialog2.remove(panel);
        }
        addedLabels.clear();
        javax.swing.JPanel panel2 = new javax.swing.JPanel();
        panel2.setBackground(new Color(51, 85, 188));
        panel2.setLayout(new BoxLayout(panel2, BoxLayout.Y_AXIS));
        panel2.setPreferredSize(new Dimension(200, 43));
//                    panel2.setSize(200, 100);
        panel2.setBorder(new EmptyBorder(5, 0, 0, 0));
        javax.swing.JLabel label2 = new javax.swing.JLabel("Logout");
        javax.swing.JLabel labelicon = new javax.swing.JLabel();

        javax.swing.JPanel panel3 = new javax.swing.JPanel(new FlowLayout(FlowLayout.LEFT));
        labelicon.setIcon(new FlatSVGIcon("Assets/svg/logout.svg"));
        label2.setHorizontalAlignment(SwingConstants.LEFT);
        label2.setForeground(Color.white);
        label2.setFont(new Font("Poppins", Font.PLAIN, 13));
        panel3.setBorder(new EmptyBorder(0, 10, 5, 10));
        panel3.setBackground(new Color(51, 85, 188));
        panel3.add(labelicon);
        panel3.add(label2);
        panel2.add(panel3);

        dialog2.add(panel2);
        addedLabels.add(panel2);
        panel3.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                editshift();
            }
        });

        dialog2.show(username, username.getWidth(), username.getHeight() + 5);
    }

    private void editshift() {
        try {
            int idshift = 0;
            int saldowal = 0;
            String tanggal_dibuat = "";
            Preferences userPreferences = Preferences.userNodeForPackage(SaldoKasAwal.class);

            String datalogin = userPreferences.get("datashift", null);

            if (datalogin != null) {
                JSONArray retrievedArray = new JSONArray(datalogin);
                idshift = retrievedArray.getInt(0);
                saldowal = retrievedArray.getInt(1);
                tanggal_dibuat = retrievedArray.getString(2);
                int confirmed = JOptionPane.showConfirmDialog(null, "Apakah Anda ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);
                if (confirmed == JOptionPane.YES_OPTION) {
                    // Aksi yang ingin dilakukan sebelum keluar
                    System.out.println("Menutup aplikasi...");
                    ResultSet p = DB.query("SELECT COUNT(*) AS total_penjualan, COALESCE(SUM(total_harga), 0) AS total_harga FROM transaksi_penjualan WHERE tanggal_transaksi BETWEEN '" + tanggal_dibuat + "' AND now(); ");

                    if (p.next()) {
                        int hasil = saldowal + p.getInt("total_harga");
                        DB.query2("UPDATE shift SET saldo_akhir_kas = '" + hasil + "',waktu_tutup = curtime(),total_penjualan = '" + p.getString("total_penjualan") + "',total_pembayaran = '" + p.getString("total_harga") + "' WHERE  id = '" + idshift + "';");
                        dispose();
                        new login().setVisible(true);
                    }

                } else {
                    System.out.println("t");
                    dispose();
                    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                }
            }

        } catch (JSONException | SQLException ex) {
            System.out.println(ex);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void resetStyle() {

        // Reset border and font style for all panels
        for (Component component : menu_bar.getComponents()) {
            if (component instanceof JPanel) {
                ((JPanel) component).setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
                for (Component innerComponent : ((JPanel) component).getComponents()) {
                    if (innerComponent instanceof JLabel) {
                        Font originalFont = ((JLabel) innerComponent).getFont();
                        ((JLabel) innerComponent).setFont(originalFont.deriveFont(Font.PLAIN));
                    }
                }
            }
        }
    }

    private void setBoldFont(JLabel label) {
        // Set font style to bold for the specified label
        label.setFont(label.getFont().deriveFont(Font.BOLD));
    }

    private void setBottomBorder(JPanel panel) {
        // Set bottom border for the specified panel
        Border bottomBorder = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE);
        panel.setBorder(BorderFactory.createCompoundBorder(panel.getBorder(), bottomBorder));
    }

}
