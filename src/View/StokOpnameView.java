/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Components.DeleteButtonRenderer;
import Config.DB;
import View.Auth.login;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.formdev.flatlaf.FlatClientProperties;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import org.json.JSONArray;

/**
 *
 * @author Administrator
 */
public class StokOpnameView extends javax.swing.JPanel {

    int iduser;

    /**
     * Creates new form StokOpnameView
     */
    public StokOpnameView() {
        initComponents();
        Preferences userPreferences = Preferences.userNodeForPackage(login.class);

        try {
            String datalogin = userPreferences.get("localLogin", null);

            if (datalogin != null) {

                JSONArray retrievedArray = new JSONArray(datalogin);

                iduser = Integer.parseInt(retrievedArray.getString(0));
                System.out.println(iduser);
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modal_cari = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_modal = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cariobat = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        textfield_stokaktual = new javax.swing.JTextField();
        textfield_keterangan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        table_modal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "No Batch", "Kode Obat", "Nama Obat", "Stok"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_modal.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table_modal);
        if (table_modal.getColumnModel().getColumnCount() > 0) {
            table_modal.getColumnModel().getColumn(0).setMinWidth(40);
            table_modal.getColumnModel().getColumn(0).setMaxWidth(40);
            table_modal.getColumnModel().getColumn(1).setResizable(false);
            table_modal.getColumnModel().getColumn(1).setPreferredWidth(20);
            table_modal.getColumnModel().getColumn(2).setResizable(false);
            table_modal.getColumnModel().getColumn(3).setResizable(false);
            table_modal.getColumnModel().getColumn(4).setMinWidth(40);
            table_modal.getColumnModel().getColumn(4).setMaxWidth(40);
        }

        jButton4.setText("Ok");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modal_cariLayout = new javax.swing.GroupLayout(modal_cari.getContentPane());
        modal_cari.getContentPane().setLayout(modal_cariLayout);
        modal_cariLayout.setHorizontalGroup(
            modal_cariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modal_cariLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        modal_cariLayout.setVerticalGroup(
            modal_cariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modal_cariLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(8, 8, 8))
        );

        jPanel1.putClientProperty(FlatClientProperties.STYLE, "arc:20");
        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cariobat.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"No Batch,Kode Obat,Nama Obat");
        cariobat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariobatActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        textfield_stokaktual.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Stok Aktual");
        textfield_stokaktual.setEditable(false);
        textfield_stokaktual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfield_stokaktualKeyTyped(evt);
            }
        });

        textfield_keterangan.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Keterangan");
        textfield_keterangan.setEditable(false);
        textfield_keterangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfield_keteranganActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Cari");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Stok Aktual");

        jButton1.setText("jButton1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Keterangan");

        jButton2.putClientProperty(FlatClientProperties.STYLE, "arc:20");
        jButton2.setBackground(new java.awt.Color(58, 98, 215));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Simpan");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.putClientProperty(FlatClientProperties.STYLE, "arc:20");
        jButton3.setBackground(new java.awt.Color(0, 204, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Ubah");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cariobat, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(textfield_stokaktual, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textfield_keterangan, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cariobat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                    .addComponent(textfield_stokaktual)
                                    .addComponent(textfield_keterangan)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel2.putClientProperty(FlatClientProperties.STYLE, "arc:20");
        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "No Batch Obat", "Kode Obat", "Nama Obat", "Stok Sistem", "Stok Aktual", "Keterangan", "Aksi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setMinWidth(40);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(40);
            jTable1.getColumnModel().getColumn(7).setCellRenderer(new DeleteButtonRenderer());
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cariobatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariobatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cariobatActionPerformed

    private void textfield_keteranganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfield_keteranganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfield_keteranganActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int columnClicked = jTable1.columnAtPoint(evt.getPoint());

        // Kolom ke-6 adalah kolom dengan index 5
        if (columnClicked == 7) {
            int index = jTable1.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.removeRow(index);
        } else {
            textfield_stokaktual.setEditable(true);
            textfield_keterangan.setEditable(true);
            int row = jTable1.getSelectedRow();
            if (jTable1.getValueAt(row, 5) != null || jTable1.getValueAt(row, 6) != null) {
                textfield_stokaktual.setText(jTable1.getValueAt(row, 5).toString());
                textfield_keterangan.setText(jTable1.getValueAt(row, 6).toString());
            } else {
                textfield_stokaktual.setText("");
                textfield_keterangan.setText("");
            }

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            modal_cari.pack();
            modal_cari.setLocationRelativeTo(null);
            modal_cari.setVisible(true);
            DefaultTableModel model = (DefaultTableModel) table_modal.getModel();
            model.setRowCount(0);
            String cari = cariobat.getText();
            ResultSet data = DB.query("SELECT * from data_cari_opname where no_batch LIKE '%" + cari + "%'or kode_obat LIKE '%" + cari + "%'or nama_obat LIKE '%" + cari + "%'");
            int no = 1;
            while (data.next()) {
                Object[] rowData = {no++, data.getString("no_batch"), data.getString("kode_obat"), data.getString("nama_obat"), data.getString("jumlah_obat")};
                model.addRow(rowData);
            }

        } catch (SQLException ex) {
            Logger.getLogger(StokOpnameView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (textfield_stokaktual.getText() != null || !" ".equals(textfield_stokaktual.getText()) && (textfield_keterangan.getText() != null || !" ".equals(textfield_stokaktual.getText()))) {
            jTable1.setValueAt(textfield_stokaktual.getText(), jTable1.getSelectedRow(), 5);
            jTable1.setValueAt(textfield_keterangan.getText(), jTable1.getSelectedRow(), 6);

        } else {
            JOptionPane.showMessageDialog(this, "Colom Harus Di Isi");
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Date currentDate = new Date();
        java.sql.Connection connection = DB.getConnection();
        // Membuat objek SimpleDateFormat dengan pola format "ddMMyyyy"
        SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy HHmmss");
        // Memformat tanggal menjadi string dengan pola yang ditentukan
        String formattedDate = sdf.format(currentDate);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (model.getRowCount() > 0) {
            try {
                String kodeopname = "OPN-" + formattedDate;
                PreparedStatement insertDetailStokOpnameStatement = connection.prepareStatement("INSERT INTO detail_stok_opname(kode_opname,no_batch,stok_sistem,stok_aktual,satuan_obat,keterangan) VALUES(?,?,?,?,?,?)");
                PreparedStatement updatebatchobatStatement = connection.prepareStatement("UPDATE batch_obat set jumlah_obat = ? WHERE no_batch=?");
                for (int i = 0; i < model.getRowCount(); i++) {
                    try {
                        String nobatch = model.getValueAt(i, 1) != null ? model.getValueAt(i, 1).toString() : "";
                        String stok_sistem = model.getValueAt(i, 4)!= null ? model.getValueAt(i, 4).toString() : "";
                        String stok_aktual = model.getValueAt(i, 5)!= null ? model.getValueAt(i, 5).toString() : "";
                        String keterangan = model.getValueAt(i, 6) != null ? model.getValueAt(i, 6).toString() : "";
                        if (!stok_aktual.isEmpty() && !keterangan.isEmpty()) {
                            ResultSet satuan_obat = DB.query("SELECT id_satuan FROM obat where kode_obat = '" + model.getValueAt(i, 2).toString() + "'");
                            if (satuan_obat.next()) {
                                insertDetailStokOpnameStatement.setString(1, kodeopname);
                                insertDetailStokOpnameStatement.setString(2, nobatch);
                                insertDetailStokOpnameStatement.setString(3, stok_sistem);
                                insertDetailStokOpnameStatement.setInt(4, Integer.parseInt(stok_aktual));
                                insertDetailStokOpnameStatement.setInt(5, satuan_obat.getInt("id_satuan"));
                                insertDetailStokOpnameStatement.setString(6, keterangan);
                                insertDetailStokOpnameStatement.addBatch();
                                updatebatchobatStatement.setInt(1, Integer.parseInt(stok_aktual));
                                updatebatchobatStatement.setString(2, nobatch);
                                updatebatchobatStatement.addBatch();
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Colom Stok Aktual dan Keterangan Harap Diisi");
                            return;
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(StokOpnameView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                PreparedStatement insertStokOpname = connection.prepareStatement("INSERT INTO stok_opname(kode_opname,id_user) VALUES (?,?)");

                insertStokOpname.setString(1, kodeopname);
                insertStokOpname.setInt(2, iduser);
                insertStokOpname.addBatch();
                insertStokOpname.executeBatch();
                insertDetailStokOpnameStatement.executeBatch();
                updatebatchobatStatement.executeBatch();
                JOptionPane.showMessageDialog(this, "Stok Opname Berhasil Ditambah");
                resetAll();

            } catch (SQLException ex) {
                Logger.getLogger(StokOpnameView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int rows = table_modal.getSelectedRow();
        int column = table_modal.getSelectedColumn();
        if (rows != -1 && column != -1) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int columnCount = table_modal.getColumnCount();

            Object[] rowData = new Object[columnCount];

            rowData[0] = jTable1.getRowCount() + 1;

            for (int col = 1; col < columnCount; col++) {
                rowData[col] = table_modal.getValueAt(rows, col);
            }
            boolean dataExists = false;
            for (int row = 0; row < jTable1.getRowCount(); row++) {

                if (jTable1.getValueAt(row, 1).equals(rowData[1])) {
                    dataExists = true;
                    break;
                }
            }
            if (!dataExists) {
                model.addRow(rowData);
                modal_cari.dispose();
                cariobat.setText("");

            } else {
                JOptionPane.showMessageDialog(this, "Data Sudah Ada");
            }

        } else {
            JOptionPane.showMessageDialog(this, "belum ada daat yg di pilih");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textfield_stokaktualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfield_stokaktualKeyTyped
       char character = evt.getKeyChar();
        if (!Character.isDigit(character) || textfield_stokaktual.getText().length() >= 4 || Character.isWhitespace(character)) {
            evt.consume();
        }
    }//GEN-LAST:event_textfield_stokaktualKeyTyped

    public void resetAll() {
        jTable1.removeAll();
        textfield_stokaktual.setText("");
        textfield_keterangan.setText("");
        cariobat.setText("");
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cariobat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JDialog modal_cari;
    private javax.swing.JTable table_modal;
    private javax.swing.JTextField textfield_keterangan;
    private javax.swing.JTextField textfield_stokaktual;
    // End of variables declaration//GEN-END:variables
}
